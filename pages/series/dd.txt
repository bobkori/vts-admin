// // const { data, mutate } = useSWR('http://localhost:3000/v1/series/', fetcher)

// const [questionState, updateQuestionState] = useImmer<State[]>([...state]);

// // Update Question
// const updateQuestion = React.useCallback(
//   (event: IEvent, language: string, index: number) => {
//     const { value } = event.target;
//     updateQuestionState((draft) => {
//       draft[index][language].question = value;
//     });
//   },
//   [updateQuestionState]
// );

// // Update Options
// const updateOptions = React.useCallback(
//   (
//     event: IEvent,
//     language: string,
//     index: {
//       _i1: number;
//       _i2: number;
//     }
//   ) => {
//     const { value } = event.target;
//     updateQuestionState((draft) => {
//       const _draft = draft[index._i1][language];
//       _draft.options[index._i2].value = value;
//     });
//   },
//   [updateQuestionState]
// );

// const addInArray = React.useCallback(() => {
//   updateQuestionState((draft) => {
//     draft.push(...state);
//   });
// }, [updateQuestionState]);

// const delteInArray = React.useCallback(
//   (index: number) => {
//     updateQuestionState((draft) => {
//       draft.filter((_d, _i) => index !== _i);
//     });
//   },
//   [updateQuestionState]
// );

// // const {mutate,data}=useSwr()

// const onSubmitData = React.useCallback(
//   async (event: FEvent) => {
//     event.preventDefault();
//     console.log(questionState);
//     try {
//       const senderData = {
//         slug: "ssc-maths-previous-year-questions again ",
//         title: "Australia Open 2023: Super Sports Quiz",
//         is_saved: false,
//         is_marked: false,
//         question_score: "20%",
//         user_attempt_list: [],
//         marks: {
//           positive: 2,
//           negative: 0.5,
//         },
//         questions: questionState,
//       };

//       console.log(senderData);
//       const { data } = await axios({
//         method: "post",
//         url: TestSeries,
//         data: senderData,
//       });
//       console.log(data);
//     } catch (error) {
//       console.error(error);
//     }
//   },
//   [questionState]
// );
// <div
// key={index}
// style={{
//   padding: ".5rem",
//   borderRadius: "10px",
//   border: "1.5px solid #c5cde6",
// }}
// >
// <div className={css["tab-container"]}>
//   <ul className={css["tab-controls"]}>
//     {tabsArray.map((t, i) => (
//       <li key={i}>{t.label}</li>
//     ))}
//   </ul>
//   <ul className={css["list-controls"]}>
//     <li>
//       {/* Delete */}
//       <DeleteIcon height={18} width={18} />
//     </li>
//   </ul>
// </div>

// {/* <button onClick={() => onDeleteQuestion(index)}>
//   Delete This
// </button> */}
// <p>Question :{index + 1}</p>
// <div className="flex">
//   <h2>English</h2>
//   <div className="row">
//     <div className="col">
//       <Input
//         name="question"
//         label="Question"
//         value={data.english?.question}
//         onChange={({ target }) =>
//           onChangeQuestion(target.value, "english", index)
//         }
//       />
//     </div>
//     {data.english?.options.map((_o, _i) => (
//       <div className="col-lg-6" key={_i}>
//         <Input
//           label="Option One"
//           value={_o.value}
//           onChange={({ target: { value } }) =>
//             onChangeOptions(value, "english", {
//               parentIndex: index,
//               childIndex: _i,
//             })
//           }
//         />
//       </div>
//     ))}
//   </div>
//   <h2>Hindi</h2>
//   <div className="row">
//     <div className="col">
//       <Input
//         label="Question"
//         value={data.hindi?.question}
//         // onChange={(event) =>
//         //   updateQuestion(event, "hindi", index)
//         // }
//         onChange={({ target }) =>
//           onChangeQuestion(target.value, "hindi", index)
//         }
//       />
//     </div>
//     {data.hindi?.options.map((_o, _i) => (
//       <div className="col-lg-6" key={_i}>
//         <Input
//           label="Option One"
//           value={_o.value}
//           onChange={({ target: { value } }) =>
//             onChangeOptions(value, "hindi", {
//               parentIndex: index,
//               childIndex: _i,
//             })
//           }
//         />
//       </div>
//     ))}
//   </div>
// </div>
// </div>


// export const getServerSideProps = async () => {
//   const response = await fetch("http://localhost:3000/api/v1/series");
//   const data = await response.json();
//   return {
//     props: {
//       series: data,
//     },
//   };
// };

// const state = [
//   {
//     hindi: {
//       question: "",
//       options: [
//         {
//           value: "",
//         },
//       ],
//     },
//     english: {
//       question: "",
//       options: [
//         {
//           value: "",
//         },
//       ],
//     },
//   },
// ];