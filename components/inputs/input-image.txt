/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable @next/next/no-img-element */
import imageConverter from "@/utils/blog-to-url";
import React from "react";
import styles from "./input.module.scss";

type Ref = React.Ref<HTMLInputElement>;
type ButtonProps = {
  label?: string;
  imageProps: {
    show: boolean;
  } & React.ComponentPropsWithoutRef<"img">;
} & React.ComponentPropsWithRef<"input">;
const _Input = ({ label, imageProps, ...rest }: ButtonProps, ref: Ref) => {
  return (
    <div className={`${styles.inputbox} ${styles.inputfrom}`}>
      {label && <label>{label}</label>}
      <div className={styles["image-container"]}>
        <input
          ref={ref}
          type="text"
          className={`${rest.className} ${styles["text-input"]}`}
          {...rest}
        />
        {imageProps.show && <ImagePreview />}
      </div>
    </div>
  );
};

const InputWithImage = React.forwardRef(_Input);
export default InputWithImage;

type ImageUploadAndPreviewProps = {
  onPickImage: (state: File) => void;
  value: File;
};

const ImagePreview = ({ onPickImage, value }: ImageUploadAndPreviewProps) => {
  const [image, setImage] = React.useState(null);

  React.useMemo(() => {
    if (value) {
      setImage(value);
    }
  }, [value]);

  React.useMemo(() => {
    if (onPickImage) {
      onPickImage(image);
    }
  }, [onPickImage, image]);

  const onChangeImage = React.useCallback(
    (event: React.ChangeEvent<HTMLInputElement>) => {
      const { files } = event.target;
      if (files) {
        const filesArray = Array.from(files);
        filesArray.forEach(async (file) => {
          setImage(file);
        });
      }
    },
    [image]
  );

  const imageUrl = React.useMemo(() => {
    if (image === null) {
      return `/images/image-preview.png`;
    } else {
      return imageConverter(image);
    }
  }, [image]);

  return (
    <label className={styles["image-preview"]}>
      <input
        type="file"
        className={styles["input-file"]}
        onChange={onChangeImage}
      />
      <img src={imageUrl} />
    </label>
  );
};
